type Account {
    id: ID!
    name: String!
    created_at: DateTimeTz!
    updated_at: DateTimeTz!
    user: User! @belongsTo
}

input CreateAccountInput {
    name: String!
}

input UpdateAccountInput {
    name: String!
}

extend type Query {
    accounts: [Account!] @all(scopes: ["byLoggedInUser"]) @guard(with: ["api", "web"])
    account(id: ID! @eq): Account! @find @can(ability: "view", find: "id") @guard(with: ["api", "web"])
}

extend type Mutation {
    createAccount(input: CreateAccountInput! @spread): Account @create @inject(context: "user.id", name: "user_id") @guard(with: ["api", "web"])
    updateAccount(id: ID!, input: UpdateAccountInput! @spread): Account @update @can(ability: "update", find: "id") @guard(with: ["api", "web"])
    deleteAccount(id: ID!): Account @delete @can(ability: "delete", find: "id") @guard(with: ["api", "web"])
}
